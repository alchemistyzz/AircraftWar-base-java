@startuml
'https://plantuml.com/class-diagram

interface Strategy
{
   shoot(int x,int y,int speedX,int speedY,
   int shootNum,int power,int direction,boolean flag):List<BaseBullet>
}

class ScatterShoot{
    shoot(int x,int y,int speedX,int speedY,
    int shootNum,int power,int direction,boolean flag):List<BaseBullet>

}
class StraightShoot{
    shoot(int x,int y,int speedX,int speedY,
    int shootNum,int power,int direction,boolean flag):List<BaseBullet>

}
abstract class AbstractAircraft
{
    # maxHp:int
    # hp:int
    # shootNum:int
    # power:int
    # direction:int
    - strategy:Strategy
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getStrategy():Strategy
    + executeShoot(int x,int y,int speedX,int speedY,int shootNum,int power,int direction,boolean flag):List<BaseBullet>
    + update():void
    + update1():void
    + reset():void
 }

 Strategy<--o AbstractAircraft
 Strategy<|..ScatterShoot
 Strategy<|..StraightShoot



@enduml